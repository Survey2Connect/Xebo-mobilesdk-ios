// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name xebompack_io
import Foundation
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import xebompack_io
public protocol XeboSurveyDelegate {
  func handleSurveyLoaded(response: [Swift.String : Swift.AnyObject])
}
public struct XeboSwiftUIWrapper : SwiftUI.UIViewRepresentable {
  public var surveyURL: Swift.String?
  public var delegate: (any XeboSurveyDelegate)?
  @SwiftUI.Binding @_projectedValueProperty($isSurveyVisible) public var isSurveyVisible: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating _modify
  }
  public var $isSurveyVisible: SwiftUI.Binding<Swift.Bool> {
    get
  }
  public init(surveyURL: Swift.String? = nil, delegate: (any XeboSurveyDelegate)? = nil, isSurveyVisible: SwiftUI.Binding<Swift.Bool>)
  @objc @_hasMissingDesignatedInitializers public class Coordinator : ObjectiveC.NSObject, XeboSurveyDelegate {
    public func handleSurveyLoaded(response: [Swift.String : Swift.AnyObject])
    @objc deinit
  }
  @_Concurrency.MainActor(unsafe) public func makeCoordinator() -> XeboSwiftUIWrapper.Coordinator
  @_Concurrency.MainActor(unsafe) public func makeUIView(context: XeboSwiftUIWrapper.Context) -> XeboSurveyView
  @_Concurrency.MainActor(unsafe) public func updateUIView(_ uiView: XeboSurveyView, context: XeboSwiftUIWrapper.Context)
  public static func presentFullScreenSurvey(surveyURL: Swift.String?, delegate: (any XeboSurveyDelegate)?)
  public static func loadSurveyAfter(visits: Swift.Int, surveyURL: Swift.String?, delegate: (any XeboSurveyDelegate)?)
  public typealias Body = Swift.Never
  public typealias UIViewType = XeboSurveyView
}
@objc @_inheritsConvenienceInitializers @IBDesignable @_Concurrency.MainActor(unsafe) public class XeboSurveyViewController : UIKit.UIViewController, XeboSurveyDelegate {
  @_Concurrency.MainActor(unsafe) public var surveyDelegate: (any XeboSurveyDelegate)!
  @_Concurrency.MainActor(unsafe) public var getSurveyLoadedResponse: Swift.Bool
  @_Concurrency.MainActor(unsafe) public var surveyUrl: Swift.String!
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) public var thankyouTimeout: Swift.Double
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) public func handleSurveyLoaded(response: [Swift.String : Swift.AnyObject])
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @IBDesignable @_Concurrency.MainActor(unsafe) public class XeboSurveyView : UIKit.UIView, WebKit.WKScriptMessageHandler, WebKit.WKNavigationDelegate {
  @_Concurrency.MainActor(unsafe) public var getSurveyLoadedResponse: Swift.Bool
  @_Concurrency.MainActor(unsafe) public var surveyDelegate: (any XeboSurveyDelegate)!
  @_Concurrency.MainActor(unsafe) @objc public func webView(_ webView: WebKit.WKWebView, decidePolicyFor navigationAction: WebKit.WKNavigationAction, decisionHandler: @escaping (WebKit.WKNavigationActionPolicy) -> Swift.Void)
  @_Concurrency.MainActor(unsafe) @objc public func webView(_ webView: WebKit.WKWebView, didFailProvisionalNavigation navigation: WebKit.WKNavigation!, withError error: any Swift.Error)
  @_Concurrency.MainActor(unsafe) @objc public func webView(_ webView: WebKit.WKWebView, didFinish navigation: WebKit.WKNavigation!)
  @_Concurrency.MainActor(unsafe) @objc public func webView(_ webView: WebKit.WKWebView, didFail navigation: WebKit.WKNavigation!, withError error: any Swift.Error)
  @_Concurrency.MainActor(unsafe) @objc public func userContentController(_ userContentController: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
  @_Concurrency.MainActor(unsafe) public func loadFullscreenSurvey(parent: UIKit.UIViewController, delegate: any XeboSurveyDelegate, surveyURL: Swift.String? = nil)
  @_Concurrency.MainActor(unsafe) public func loadEmbedSurvey(_ surveyURL: Swift.String? = nil)
  @_Concurrency.MainActor(unsafe) public func loadSurveyAfter(numberOfVisits visits: Swift.Int, parent: UIKit.UIViewController, delegate: any XeboSurveyDelegate, surveyURL: Swift.String? = nil)
  @_Concurrency.MainActor(unsafe) public func loadSurvey(_ surveyURL: Swift.String? = nil)
  @objc deinit
}
